"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const amphtml_context_1 = require("./amphtml-context");
function isAmp({ enabled = false, hybrid = false, hasQuery = false, } = {}) {
    return enabled && (!hybrid || (hybrid && hasQuery));
}
exports.isAmp = isAmp;
function useAmp() {
    const ampMode = react_1.default.useContext(amphtml_context_1.AmpModeContext);
    // un-comment below to not be considered AMP in dirty mode
    return isAmp(ampMode); // && ampMode.hasQuery
}
exports.useAmp = useAmp;
function withAmp(Component, { hybrid = false } = {}) {
    function WithAmpWrapper(props = {}) {
        const ampMode = react_1.default.useContext(amphtml_context_1.AmpModeContext);
        ampMode.enabled = true;
        ampMode.hybrid = hybrid;
        return react_1.default.createElement(Component, props);
    }
    WithAmpWrapper.__nextAmpOnly = !hybrid;
    WithAmpWrapper.getInitialProps = Component.getInitialProps;
    return WithAmpWrapper;
}
exports.withAmp = withAmp;
